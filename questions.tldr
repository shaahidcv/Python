{
	"tldrawFileFormatVersion": 1,
	"schema": {
		"schemaVersion": 2,
		"sequences": {
			"com.tldraw.store": 4,
			"com.tldraw.asset": 1,
			"com.tldraw.camera": 1,
			"com.tldraw.document": 2,
			"com.tldraw.instance": 25,
			"com.tldraw.instance_page_state": 5,
			"com.tldraw.page": 1,
			"com.tldraw.instance_presence": 5,
			"com.tldraw.pointer": 1,
			"com.tldraw.shape": 4,
			"com.tldraw.asset.bookmark": 2,
			"com.tldraw.asset.image": 5,
			"com.tldraw.asset.video": 5,
			"com.tldraw.shape.group": 0,
			"com.tldraw.shape.text": 2,
			"com.tldraw.shape.bookmark": 2,
			"com.tldraw.shape.draw": 2,
			"com.tldraw.shape.geo": 9,
			"com.tldraw.shape.note": 8,
			"com.tldraw.shape.line": 5,
			"com.tldraw.shape.frame": 0,
			"com.tldraw.shape.arrow": 5,
			"com.tldraw.shape.highlight": 1,
			"com.tldraw.shape.embed": 4,
			"com.tldraw.shape.image": 4,
			"com.tldraw.shape.video": 2,
			"com.tldraw.binding.arrow": 0
		}
	},
	"records": [
		{
			"gridSize": 10,
			"name": "",
			"meta": {},
			"id": "document:document",
			"typeName": "document"
		},
		{
			"meta": {},
			"id": "page:page",
			"name": "Page 1",
			"index": "a1",
			"typeName": "page"
		},
		{
			"id": "pointer:pointer",
			"typeName": "pointer",
			"x": 230,
			"y": 411.8000183105469,
			"lastActivityTimestamp": 1733462173779,
			"meta": {}
		},
		{
			"followingUserId": null,
			"opacityForNextShape": 1,
			"stylesForNextShape": {},
			"brush": null,
			"scribbles": [],
			"cursor": {
				"type": "default",
				"rotation": 0
			},
			"isFocusMode": false,
			"exportBackground": true,
			"isDebugMode": false,
			"isToolLocked": false,
			"screenBounds": {
				"x": 0,
				"y": 0,
				"w": 1318.4000244140625,
				"h": 484
			},
			"insets": [
				false,
				false,
				true,
				false
			],
			"zoomBrush": null,
			"isGridMode": false,
			"isPenMode": false,
			"chatMessage": "",
			"isChatting": false,
			"highlightedUserIds": [],
			"isFocused": true,
			"devicePixelRatio": 1.25,
			"isCoarsePointer": false,
			"isHoveringCanvas": true,
			"openMenus": [],
			"isChangingStyle": false,
			"isReadonly": false,
			"meta": {},
			"duplicateProps": null,
			"id": "instance:instance",
			"currentPageId": "page:page",
			"typeName": "instance"
		},
		{
			"editingShapeId": "shape:8LkejyUVusMunOlQCoDfF",
			"croppingShapeId": null,
			"selectedShapeIds": [
				"shape:8LkejyUVusMunOlQCoDfF"
			],
			"hoveredShapeId": "shape:8LkejyUVusMunOlQCoDfF",
			"erasingShapeIds": [],
			"hintingShapeIds": [],
			"focusedGroupId": null,
			"meta": {},
			"id": "instance_page_state:page:page",
			"pageId": "page:page",
			"typeName": "instance_page_state"
		},
		{
			"x": 0,
			"y": -111,
			"z": 1,
			"meta": {},
			"id": "camera:page:page",
			"typeName": "camera"
		},
		{
			"x": 222.8000030517578,
			"y": 105.39999771118164,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:8LkejyUVusMunOlQCoDfF",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 1648.125,
				"text": "1. Sorting: Implement a program to sort a list using bubble sort or insertion sort.\n2.File Handling: Write a program to read a text file and count the number of lines, words, and characters.\n3.Anagram Check: Write a function to check if two strings are anagrams.\n4.LCM and GCD: Calculate the Least Common Multiple (LCM) and Greatest Common Divisor (GCD) of two numbers.\n5.Matrix Multiplication: Implement matrix multiplication using nested lists.\n6.Armstrong Number: Write a program to check if a number is an Armstrong number.\n7.Binary Search: Implement binary search on a sorted list.\n8.Remove Duplicates: Remove duplicates from a list while maintaining order.\n9.Decorators: Create a decorator to time the execution of a function.\n10.String Compression: Write a function to compress a string based on repeated characters (e.g., \"aabcccccaaa\" becomes \"a2b1c5a3\").",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a1",
			"typeName": "shape"
		}
	]
}